{"version":3,"file":"static/js/347.b6e8871c.chunk.js","mappings":"gOACA,EAAuB,0B,SCgEvB,MAxDA,YAAoC,IAAbA,EAAY,EAAZA,SACfC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAc3B,OACE,kBAAMN,SAba,SAAAO,GACnBA,EAAMC,iBAEN,IAAMC,EAAW,CACfC,KAAMT,EAAaU,QAAQC,MAC3BC,OAAQV,EAAcQ,QAAQC,OAEhCZ,EAASS,GAETF,EAAMO,OAAOC,OACd,EAG+BC,UAAWC,EAAzC,WACE,eAAID,UAAU,aAAd,0BACA,mBAAOA,UAAU,cAAjB,WACE,sCACA,kBACEE,KAAK,OACLR,KAAK,OACLS,YAAa,UACbC,IAAKnB,EACLoB,UAAQ,QAGZ,mBAAOL,UAAU,cAAjB,WACE,wCACA,kBACEE,KAAK,OACLR,KAAK,QACLS,YAAa,gBACbC,IAAKjB,EACLkB,UAAQ,QAGZ,mBACEL,UAAU,WACVM,SAAqB,YAAXlB,EACVc,KAAK,SAHP,yBAOY,YAAXd,IAAwB,SAACmB,EAAA,EAAD,MAG9B,E,oBC3CD,MAVA,SAA0BC,EAAWC,GAOnC,OAN8B,SAAAC,GAG5B,OAFmBrB,EAAAA,EAAAA,IAAYsB,EAAAA,KAEX,SAACH,GAAD,UAAeE,KAAY,SAAC,KAAD,CAAUE,GAAIH,GAC9D,CAGF,E,UCdYI,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,EACtBC,EAAsB,SAAAF,GAAK,OAAIA,EAAMC,SAAS3B,MAAnB,EAC3B6B,EAAqB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,KAAnB,ECDvC,GAAgB,KAAO,uBAAuB,IAAM,sBAAsB,KAAO,wBCkEjF,MAAeC,GAtDf,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAajC,EAAAA,EAAAA,IAAYsB,EAAAA,IACzBI,GAAW1B,EAAAA,EAAAA,IAAYwB,GACvBzB,GAASC,EAAAA,EAAAA,IAAY2B,GACrBE,GAAQ7B,EAAAA,EAAAA,IAAY4B,GAgB1B,OAdAM,EAAAA,EAAAA,YAAU,WACHD,GAELF,GAASI,EAAAA,EAAAA,MACV,GAAE,CAACF,EAAYF,KAWd,4BACE,SAAC,EAAD,CAAapC,SAVI,SAAAS,GACnB2B,GAASK,EAAAA,EAAAA,IAAkBhC,GAC5B,IASe,YAAXL,IAAwB,SAACmB,EAAA,EAAD,IACd,OAAVW,IACC,eAAGlB,UAAWC,EAAAA,KAAd,yCAAmDiB,MAE5C,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAUW,QAAS,IAClB,eAAI1B,UAAWC,EAAAA,KAAf,gBACGc,QADH,IACGA,OADH,EACGA,EAAUY,KAAI,SAAAC,GAAO,OACpB,gBAAqB5B,UAAWC,EAAAA,QAAhC,WACE,0BACE,kCACC2B,EAAQlC,SAEX,0BACE,oCACCkC,EAAQ/B,WAEX,mBACEgC,QAAS,kBAxBKC,EAwBqBF,EAAQG,QAvBvDX,GAASY,EAAAA,EAAAA,IAAqBF,IADJ,IAAAA,CAwBL,EACT9B,UAAWC,EAAAA,IAFb,sBATO2B,EAAQG,GADG,QAsB/B,GAE6C,W","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/HOC/WithAuthRedirect.jsx","redux/contacts/selectorContacts.js","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectStatus } from 'redux/selectorsUser';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const nameInputRef = useRef();\n  const phoneInputRef = useRef();\n  const status = useSelector(selectStatus);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      name: nameInputRef.current.value,\n      number: phoneInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h2 className=\"form-title\">Add contact</h2>\n      <label className=\"input-group\">\n        <span>Name: </span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder={'Tetiana'}\n          ref={nameInputRef}\n          required\n        />\n      </label>\n      <label className=\"input-group\">\n        <span>Number: </span>\n        <input\n          type=\"text\"\n          name=\"phone\"\n          placeholder={'+12-345-67-89'}\n          ref={phoneInputRef}\n          required\n        />\n      </label>\n      <button\n        className=\"form-btn\"\n        disabled={status === 'pending'}\n        type=\"submit\"\n      >\n        Add contact\n      </button>\n      {status === 'pending' && <Loader />}\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { selectIsLoggedIn } from 'redux/selectorsUser';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;\n","export const selectContacts = state => state.contacts.contacts;\nexport const selectContactStatus = state => state.contacts.status;\nexport const selectContactError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Contacts_text__kop-x\",\"btn\":\"Contacts_btn__RQTAr\",\"list\":\"Contacts_list__OonZI\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport WithAuthRedirect from 'components/HOC/WithAuthRedirect';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {addContactRequest, deleteContactRequest, getContactsRequest} from 'redux/contacts/contactsSlice';\nimport {selectContactError, selectContacts, selectContactStatus} from 'redux/contacts/selectorContacts';\nimport { selectIsLoggedIn } from 'redux/selectorsUser';\n\nimport s from './Contacts.module.css';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const contacts = useSelector(selectContacts);\n  const status = useSelector(selectContactStatus);\n  const error = useSelector(selectContactError);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(getContactsRequest());\n  }, [isLoggedIn, dispatch]);\n\n  const handleSubmit = formData => {\n    dispatch(addContactRequest(formData));\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactRequest(contactId));\n  };\n\n  return (\n    <div>\n      <ContactForm onSubmit={handleSubmit} />\n      {status === 'pending' && <Loader />}\n      {error !== null && (\n        <p className={s.text}>Sorry, an error occurred... {error}</p>\n      )}\n      {contacts?.length > 0 && (\n        <ul className={s.list}>\n          {contacts?.map(contact => (\n            <li key={contact.id} className={s.contact}>\n              <p>\n                <b>Name: </b>\n                {contact.name}\n              </p>\n              <p>\n                <b>Number: </b>\n                {contact.number}\n              </p>\n              <button\n                onClick={() => handleDeleteContact(contact.id)}\n                className={s.btn}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default WithAuthRedirect(ContactsPage, '/sign-in');\n"],"names":["onSubmit","nameInputRef","useRef","phoneInputRef","status","useSelector","selectStatus","event","preventDefault","formData","name","current","value","number","target","reset","className","s","type","placeholder","ref","required","disabled","Loader","Component","navigateTo","props","selectIsLoggedIn","to","selectContacts","state","contacts","selectContactStatus","selectContactError","error","WithAuthRedirect","dispatch","useDispatch","isLoggedIn","useEffect","getContactsRequest","addContactRequest","length","map","contact","onClick","contactId","id","deleteContactRequest"],"sourceRoot":""}