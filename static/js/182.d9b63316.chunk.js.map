{"version":3,"file":"static/js/182.d9b63316.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/HOC/WithAuthRedirect.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectorContacts.js","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectStatus } from 'redux/user/selectorsUser';\n\nimport { Loader } from 'components/Loader/Loader';\n\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const nameInputRef = useRef();\n  const phoneInputRef = useRef();\n  const status = useSelector(selectStatus);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      name: nameInputRef.current.value,\n      number: phoneInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h2 className=\"form-title\">Add contact</h2>\n      <label className=\"input-group\">\n        <span>Name: </span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder={'Tetiana'}\n          ref={nameInputRef}\n          required\n        />\n      </label>\n      <label className=\"input-group\">\n        <span>Number: </span>\n        <input\n          type=\"text\"\n          name=\"phone\"\n          placeholder={'+12-345-67-89'}\n          ref={phoneInputRef}\n          required\n        />\n      </label>\n      <button\n        className=\"form-btn\"\n        disabled={status === 'pending'}\n        type=\"submit\"\n      >\n        Add contact\n      </button>\n      {status === 'pending' && <Loader />}\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { selectIsLoggedIn } from 'redux/user/selectorsUser';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectContactStatus = state => state.contacts.status;\nexport const selectContactError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n    return contacts.filter( contact => contact.name.toLowerCase().trim().includes(filter.toLowerCase()))\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Contacts_text__kop-x\",\"btn\":\"Contacts_btn__RQTAr\",\"list\":\"Contacts_list__OonZI\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"text\":\"Filter_text__uqQRu\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/contactsSlice';\nimport { selectFilter } from 'redux/contacts/selectorContacts';\nimport s from './Filter.module.css';\n\nexport function Filter() {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <div style={{ margin: '20px auto', width: '500px' }}>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={handleFilter}\n        autoComplete=\"off\"\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport WithAuthRedirect from 'components/HOC/WithAuthRedirect';\nimport { Loader } from 'components/Loader/Loader';\n\nimport {addContactRequest, deleteContactRequest, getContactsRequest} from 'redux/contacts/contactsSlice';\nimport {selectContactError, selectContacts, selectContactStatus, selectFilteredContacts} from 'redux/contacts/selectorContacts';\nimport { selectIsLoggedIn } from 'redux/user/selectorsUser';\n\nimport s from './Contacts.module.css';\nimport { Filter } from 'components/Filter/Filter';\n\nfunction ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const contacts = useSelector(selectContacts);\n  const status = useSelector(selectContactStatus);\n  const error = useSelector(selectContactError);\n  const filterContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(getContactsRequest());\n  }, [isLoggedIn, dispatch]);\n\n  const handleSubmit = formData => {\n    dispatch(addContactRequest(formData));\n  };\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContactRequest(contactId));\n  };\n\n  return (\n    <div>\n      <ContactForm onSubmit={handleSubmit} />\n      {status === 'pending' && <Loader />}\n      {error !== null && (\n        <p className={s.text}>Sorry, an error occurred... {error}</p>\n      )}\n      {contacts?.length > 1 && <Filter />}\n      {filterContacts?.length > 0 && (\n        <ul className={s.list}>\n          {filterContacts?.map(contact => (\n            <li key={contact.id} className={s.contact}>\n              <p>\n                <b>Name: </b>\n                {contact.name}\n              </p>\n              <p>\n                <b>Number: </b>\n                {contact.number}\n              </p>\n              <button\n                onClick={() => handleDeleteContact(contact.id)}\n                className={s.btn}\n              >\n                Delete\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default WithAuthRedirect(ContactsPage, '/sign-in');\n"],"names":["onSubmit","nameInputRef","useRef","phoneInputRef","status","useSelector","selectStatus","event","preventDefault","formData","name","current","value","number","target","reset","className","s","type","placeholder","ref","required","disabled","Loader","Component","navigateTo","props","selectIsLoggedIn","to","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectContactStatus","selectContactError","error","selectFilter","filter","selectFilteredContacts","contact","toLowerCase","trim","includes","Filter","dispatch","useDispatch","style","margin","width","onChange","setFilter","autoComplete","WithAuthRedirect","isLoggedIn","filterContacts","useEffect","getContactsRequest","addContactRequest","onClick","contactId","id","deleteContactRequest"],"sourceRoot":""}