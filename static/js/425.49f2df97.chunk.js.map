{"version":3,"file":"static/js/425.49f2df97.chunk.js","mappings":"mNACA,EAAuD,uBAAvD,EAAqF,uB,SCO9E,SAASA,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,SAAiC,IAAvBC,YAAAA,OAAuB,SACpDC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAAmBF,EAAAA,EAAAA,UACnBG,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAc3B,OACE,kBAAMR,SAba,SAAAS,GACnBA,EAAMC,iBAEN,IAAMC,GAAQ,mBACPV,GAAe,CAAEW,KAAMV,EAAaW,QAAQC,QADrC,IAEZC,MAAOX,EAAcS,QAAQC,MAC7BE,SAAUX,EAAiBQ,QAAQC,QAErCd,EAASW,GAETF,EAAMQ,OAAOC,OACd,EAE+BC,UAAWC,EAAzC,WACE,eAAID,UAAU,aAAd,SAA4BlB,EAAc,UAAY,YACrDA,EAAc,MACb,mBAAOkB,UAAU,cAAjB,WACE,iBAAMA,UAAWC,EAAjB,qBACA,kBAAOC,KAAK,OAAOT,KAAK,OAAOU,IAAKpB,EAAcqB,UAAQ,QAG9D,mBAAOJ,UAAU,cAAjB,WACE,iBAAMA,UAAWC,EAAjB,sBACA,kBAAOC,KAAK,QAAQT,KAAK,QAAQU,IAAKlB,EAAemB,UAAQ,QAE/D,mBAAOJ,UAAU,cAAjB,WACE,iBAAMA,UAAWC,EAAjB,yBACA,kBACEC,KAAK,WACLT,KAAK,WACLY,aAAa,KACbC,UAAW,EACXH,IAAKjB,EACLkB,UAAQ,QAIZ,mBAAQG,SAAqB,YAAXpB,EAAsBe,KAAK,SAA7C,SAEGpB,EAAc,UAAY,cAIlC,C,oICxDD,EAAuB,qB,SCmCvB,MAzBA,WACE,IAAM0B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaxB,EAAAA,EAAAA,IAAYyB,EAAAA,IACzBC,GAAQ1B,EAAAA,EAAAA,IAAY2B,EAAAA,IAY1B,OAVAC,EAAAA,EAAAA,YAAU,WACHJ,GAELF,EAAS,YACV,GAAE,CAACE,EAAYF,KAOd,2BACa,OAAVI,IACC,eAAGd,UAAWC,EAAd,yCAAmDa,MAErD,SAAClC,EAAA,EAAD,CAAUC,SATM,SAAAW,GAClBgB,GAASS,EAAAA,EAAAA,IAAazB,GACvB,EAOoCV,aAAW,MAGjD,C","sources":["webpack://react-homework-template/./src/components/AuthForm/AuthForm.module.css?9658","components/AuthForm/AuthForm.jsx","webpack://react-homework-template/./src/pages/SingIn/SingIn.module.css?7a43","pages/SingIn/SingIn.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"label\":\"AuthForm_label__-RWhN\",\"form\":\"AuthForm_form__N+Fyz\",\"span\":\"AuthForm_span__+HIvk\"};","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { selectStatus } from 'redux/selectorsUser';\n\nimport s from './AuthForm.module.css';\n\nexport function AuthForm({ onSubmit, isLoginForm = false }) {\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const status = useSelector(selectStatus);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      ...(!isLoginForm && { name: nameInputRef.current.value }),\n      email: emailInputRef.current.value,\n      password: passwordInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <h2 className=\"form-title\">{isLoginForm ? 'Sign In' : 'Sign Up'}</h2>\n      {isLoginForm ? null : (\n        <label className=\"input-group\">\n          <span className={s.span}>Name: </span>\n          <input type=\"text\" name=\"name\" ref={nameInputRef} required />\n        </label>\n      )}\n      <label className=\"input-group\">\n        <span className={s.span}>Email: </span>\n        <input type=\"email\" name=\"email\" ref={emailInputRef} required />\n      </label>\n      <label className=\"input-group\">\n        <span className={s.span}>Password: </span>\n        <input\n          type=\"password\"\n          name=\"password\"\n          autoComplete=\"on\"\n          minLength={7}\n          ref={passwordInputRef}\n          required\n        />\n      </label>\n\n      <button disabled={status === 'pending'} type=\"submit\">\n        {/* {status === 'pending' && <StyledFormLoader />} */}\n        {isLoginForm ? 'Sign In' : 'Sign Up'}\n      </button>\n    </form>\n  );\n}\n\nAuthForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"SingIn_text__SuUtN\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\n\nimport { AuthForm } from 'components/AuthForm/AuthForm';\n\nimport { selectAuthError, selectIsLoggedIn } from 'redux/selectorsUser';\nimport { loginRequest } from 'redux/userSlice';\n\nimport s from './SingIn.module.css';\n\nfunction SignInPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  const handleLogin = formData => {\n    dispatch(loginRequest(formData));\n  };\n\n  return (\n    <div>\n      {error !== null && (\n        <p className={s.text}>Sorry, an error occurred... {error}</p>\n      )}\n      <AuthForm onSubmit={handleLogin} isLoginForm />\n    </div>\n  );\n}\nexport default SignInPage;\n"],"names":["AuthForm","onSubmit","isLoginForm","nameInputRef","useRef","emailInputRef","passwordInputRef","status","useSelector","selectStatus","event","preventDefault","formData","name","current","value","email","password","target","reset","className","s","type","ref","required","autoComplete","minLength","disabled","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","selectIsLoggedIn","error","selectAuthError","useEffect","loginRequest"],"sourceRoot":""}